description: Pipeline for parsing the Nginx error logs
processors:
  - grok:
      field: message
      patterns:
        - '%{DATA:nginx.error.time} \[%{DATA:log.level}\] %{NUMBER:process.pid:long}#%{NUMBER:process.thread.id:long}:
          (\*%{NUMBER:nginx.error.connection_id:long} )?(?<message>%{NGINXERROR_MESSAGE}|%{GREEDYMULTILINE})(?:, client: (?<nginx.error.client>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:nginx.error.server}?)(?:, request: %{QS:nginx.error.request})?(?:, upstream: (?<nginx.error.upstream>\"%{URI}\"|%{QS}))?(?:, host: %{QS:nginx.error.host})?(?:, referrer: \"%{URI:nginx.error.referrer}\")?'
      pattern_definitions:
        NGINXERROR_DATE: "%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME}"
        NGINXERROR_MESSAGE: '(?:%{GREEDYDATA})?\(%{NUMBER:nginx.error.code}: %{GREEDYDATA:nginx.error.info}\)(?:%{GREEDYDATA})?'
        GREEDYMULTILINE: |-
          (.|
          |	)*
      ignore_missing: true
  - rename:
      field: "@timestamp"
      target_field: event.created
  - date:
      if: ctx.event.timezone == null
      field: nginx.error.time
      target_field: "@timestamp"
      formats:
        - yyyy/MM/dd H:m:s
      on_failure:
        - append:
            field: error.message
            value: "{{ _ingest.on_failure_message }}"
  - date:
      if: ctx.event.timezone != null
      field: nginx.error.time
      target_field: "@timestamp"
      formats:
        - yyyy/MM/dd H:m:s
      timezone: "{{ event.timezone }}"
      on_failure:
        - append:
            field: error.message
            value: "{{ _ingest.on_failure_message }}"
  - remove:
      field: nginx.error.time
  - set:
      field: event.kind
      value: event
  - append:
      field: event.category
      value: web
  - append:
      field: event.type
      value: error
  - grok:
      field: log.file.path
      patterns:
        - "/(%{DATA}/)*%{DATA:destination.domain}/error.log"
      if: "ctx?.destination?.domain == null"
  - set:
      field: event.module
      value: nginx
      if: ctx?.event?.module == null
on_failure:
  - set:
      field: error.message
      value: "{{ _ingest.on_failure_message }}"
